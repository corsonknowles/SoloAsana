# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run rspec
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Rspec

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  rspec:
    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     ruby-version: ['2.5']

    services:
      postgres:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          RAILS_ENV: test
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        ruby-version: 2.5.5
    - uses: actions/setup-node@v1
      with:
        node-version: '6.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Install PostgreSQL client
      run: |
        sudo apt-get -yqq install libpq-dev

    # - name: Run Tests
    #   env:
    #     PG_DATABASE: SoloAsana_test
    #     PG_HOST: localhost
    #     PG_USER: SoloAsana
    #     PG_PASSWORD: password
    #     POSTGRES_PASSWORD: password
    #     RAILS_ENV: test
    #     WITH_COVERAGE: true
    #     DISABLE_SPRING: 1
    #   run: |
    #     bin/rails db:setup
    #     bundle exec rspec


    # # TODO: Set this up after configuring SimpleCov
    # - name: Upload Code Coverage
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: code-coverage
    #     path: coverage/


    # - name: Gem cache
    #   id: cache-bundle
    #   uses: actions/cache@v2
    #   with:
    #     path: vendor/bundle
    #     key: bundle-${{ hashFiles('**/Gemfile.lock') }}

    # - name: Setup test database
    #   env:
    #     RAILS_ENV: test
    #   run: bin/rails db:setup
    #
    - name: Run tests
      env:
        RAILS_ENV: test
        POSTGRES_PASSWORD: password
      run: bundle exec rspec
    # - name: Set up Ruby
    # # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # # change this to (see https://github.com/ruby/setup-ruby#versioning):
    #   uses: ruby/setup-ruby@v1
    #   # uses: ruby/setup-ruby@473e4d8fe5dd94ee328fdfca9f8c9c7afc9dae5e
    #   with:
    #     ruby-version: ${{ matrix.ruby-version }}
    #     bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    #
    #
    # - name: Setup Node
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: 6.10.1
    # - name: Find yarn cache location
    #   id: yarn-cache
    #   run: echo "::set-output name=dir::$(yarn cache dir)"
    # - name: JS package cache
    #   uses: actions/cache@v1
    #   with:
    #     path: ${{ steps.yarn-cache.outputs.dir }}
    #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-yarn-
    # - name: Install packages
    #   run: |
    #     yarn install --pure-lockfile
    #
    # - name: Setup test database
    #   env:
    #     RAILS_ENV: test
    #   run: bin/setup
    #
    # - name: Run tests
    #   run: bundle exec rspec
